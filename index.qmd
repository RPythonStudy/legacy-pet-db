---
title: Legacy PET Database
author: BenKorea
description: "Access PET 판독과 준비기록을 시기별로 정리"
date: "2025-07-23"
date-modified: last-modified
toc-depth: 4
---

```{r}
#| label: setup
#| echo: false
#| message: false

library(here)
library(readxl)
library(dplyr)
library(data.table)

invisible(lapply(
  list.files(here::here("R"), pattern = "\\.R$", full.names = TRUE),
  source,
  encoding = "UTF-8"
))

```

```{r}
#| label: reports_access

reports_access <- my_read_excel_dir(directory="./data/raw/reports_access/", pattern = "\\.xlsx$")
reports_access[, `ExamDate` := as.Date(as.numeric(`ExamDate`), origin = "1899-12-30")]

pet_reports_access <- reports_access %>%
  filter(
    grepl("PET|18F", ExamName, ignore.case = TRUE)
  )

```

```{r}
#| label: pet_reports_access_ptid_validation

pet_reports_access_invalid_ptid <- my_validate_ptid(pet_reports_access, "PtID")

preparations_access <- my_read_excel_dir(directory="./data/raw/preparations_access/", pattern = "\\.xlsx$")
preparations_access[, `ExamDate` := as.Date(as.numeric(`ExamDate`), origin = "1899-12-30")]


pet_reports_access_invalid_ptid[
  preparations_access[, .(PtName, ExamDate, PtID)], 
  on = .(PtName, ExamDate), 
  PtID := i.PtID
]



# 1. NA인 PtID의 PtName 추출
target_names <- pet_reports_access_invalid_ptid %>%
  filter(is.na(PtID)) %>%
  pull(PtName) %>%
  unique()

# 2. preparations_access에서 해당 PtName 가진 행 추출
preparations_access_subset <- preparations_access %>%
  filter(PtName %in% target_names)

unique_ptid_dt <- preparations_access_subset[
  !is.na(PtID), 
  .(n_unique = uniqueN(PtID), PtID = unique(PtID)), 
  by = PtName
][n_unique == 1, .(PtName, PtID)]

# 2. pet_reports_access_invalid_ptid에 업데이트
pet_reports_access_invalid_ptid[
  unique_ptid_dt, 
  on = .(PtName), 
  PtID := i.PtID
]

pet_reports_access[
  pet_reports_access_invalid_ptid, 
  on = .(ID), 
  PtID := i.PtID
]

pet_reports_access[PtName == "민병상", PtID := "814428"]

colSums(is.na(pet_reports_access))


```

```{r}
#| label: pet_reports_access

preparation_access_raw <- my_read_excel_dir(directory="./data/raw/preparation_access/", pattern = "\\.xlsx$")

pet_reports_access_raw_na_ptid_updated_ptid <- merge(
  pet_reports_access_raw_na_ptid,
  preparation_access_raw[, .(PtName, ExamDate, PtID)], 
  by = c("PtName", "ExamDate"), 
  all.x = TRUE
)

pet_reports_access_raw_final <- pet_reports_access_raw_na_ptid_updated_ptid %>%
  select(-PtID.x) %>%                 # PtID.x 컬럼 삭제
  rename(PtID = PtID.y) %>%           # PtID.y를 PtID로 이름 변경
  filter(!is.na(PtID))                # PtID가 NA인 행은 제거

pet_reports_access <- bind_rows(
  pet_reports_access_raw_ptid,
  pet_reports_access_raw_final
)

pet_reports_access[, `ExamDate` := as.Date(as.numeric(`ExamDate`), origin = "1899-12-30")]

pet_reports_access_only <- pet_reports_access %>%
  filter(ExamDate < as.Date("2000-07-04"))

pet_reports_access_only_invalid_ptid <- my_validate_ptid(pet_reports_access_only, "PtID")

```

## 시기별 PET 판독/준비기록

앞서의 기술을 보면 PET 판독은 세가지 시기로 구분될 필요가 있습니다. 첫번째 시기는 `1997-07-16`\~`2000-07-03`까지의 기간으로 Access 판독만 있는 시기입니다.

```{r}
#| label: preparation_access

preparation_access_raw_invalid_ptid <- my_validate_ptid (preparation_access_raw, "PtID")
colSums(is.na(preparation_access_raw))
preparation_access_na_ptid_ptname_examdate <- preparation_access_raw %>%
  filter(is.na(PtID) & is.na(PtName) & is.na(ExamDate))


```

```{r}
#| label: pet_pacs

pet_pacs_raw <- my_read_excel_dir(directory="./data/raw/pet_pacs/", pattern = "\\.xlsx$")

pet_pacs_na_study_date <- pet_pacs_raw %>%
  filter(is.na(`Study Date`))

pet_pacs <- pet_pacs_raw %>%
  filter(!is.na(`Study Date`))

pet_pacs_na_Age <- pet_pacs %>%
  filter(is.na(`Age`))

pet_pacs <- pet_pacs %>%
  filter(!is.na(`Age`))

pet_pacs_invalid_ptid <- my_validate_ptid (pet_pacs, "ID")

```

-   전산자료임에도 불구하고 Study Date가 NA여서 이 데이터셋을 삭제하였고
-   Age가 NA 인 경우도 삭제를 하고 진행하였습니다. N='r nrow(pet_pacs)\`

```{r}
#| label: pet_pacs

pet_pacs[, `Req. Date` := as.Date(as.numeric(`Req. Date`), origin = "1899-12-30")]
pet_pacs[, `Study Date` := as.Date(as.numeric(`Study Date`), origin = "1899-12-30")]

pet_pacs_age_y <- pet_pacs %>%
  filter(grepl("Y", Age, ignore.case = TRUE)) 

pet_pacs[, `Age` := as.numeric(`Age`),]

pet_pacs_outsdie <- pet_pacs %>%
  filter(grepl("outside", `Req. Name`, ignore.case = TRUE)) 

```

-   여기에는 outside PET가 5419 case 포함되어 있습니다.

## PET 판독소견조회 (OCR)

```{r}
#| label: "reports_ocr"

reports_ocr <- my_read_excel_dir (directory="./data/raw/reports_ocr/", pattern = "\\.xlsx$")
```

-   PACS의 PET 검사목록과는 별개로, OCR에서 PET 판독소견을 조회할 수 있으며, 이는 영상은 없지만 판독소견은 존재합니다.
-   OCR/핵의학체내/검사관리결과/판독소견조회 메뉴를 사용하면 됩니다.
-   `2000-07-04`부터 조회됩니다.
-   전산팀으로부터 받은 자료를 통합해서 reports_ocr이란 데이터테이블로 만들었습니다.

```{r}
#| label: "reports_ocr_na"

colSums(is.na(reports_ocr))
reports_ocr_na <- reports_ocr %>%
  filter(is.na(실시일시))

```

-   특이하게도 2009년 12월에 주로 처방한 데이터셋의 일부에서 실시일시 NA가 발견되었습니다.

```{r}
#| label: as.Date
 

reports_ocr <- reports_ocr %>%
  mutate(
    처방일자 = as.Date(처방일자),
    실시일시 = as.Date(실시일시)
  )

reports_ocr <- reports_ocr %>%
  filter(!grepl("Y", 나이, ignore.case = TRUE)) %>%
  mutate(나이 = as.numeric(나이))

reports_ocr_invalid_ptid <- my_validate_ptid (reports_ocr, "환자번호")

```

## PET 검사기록지관리 (매뉴얼)

-   OCR/핵의학체내/검사관리/검사기록지관리 메뉴
-   PET 검사기록지가 조회가 되기 시작하는 것이 대략적으로 2007-09-27 부터입니다.
-   2007-09-27 이후라고 할지라도 2009년경까지는 일부는 검사기록지가 있고 일부는 없고 일관성 없습니다.
-   전산팀으로부터 전달받은 자료를 `preparation_ocr`로 읽어 드립니다.

```{r}
#| label: "preparation_ocr"



preparation_ocr <- my_read_excel_dir("./data/preparation_ocr/", pattern = "\\.xlsx$")

colSums(is.na(preparation_ocr))

preparation_ocr_na <- preparation_ocr %>%
  filter(is.na(검사일자))

preparation_ocr_invalide_ptid <- my_validate_ptid (preparation_ocr, "환자번호")

preparation_ocr_bwt <- preparation_ocr %>%
  filter(!is.na(WEIGHT))

```

## PET 준비기록 at Access database

-   핵의학과에서는 PET 준비기록 및 판독을 Access로 관리했다가 병원전산으로 이관되었음 (정확한 기준일은 모름)
-   Access 상의 PET 준비기록은 2000-01-25부터 존재하지만 실제적인 입력은 `2000-05-02`부터 된 것으로 판단됨.
-   Access 상의 PET 준비기록은 `2009-08-07`까지 존재함

## PET 검사목록의 확보

-   2003\~2016년 PACS 상 PET 검사기록 (전산팀 유래)

## PET 준비기록 보존 전략

-   따라서 PET 준비기록도 최소한 `2003-05-12`부터 보존하는 전략이 필요

```{r}
#| label: "load-prepertation_access"
#| 
library(readxl)
preperation_raw <- read_excel("./data/access/PET_Preparation_Information_on_Access.xlsx")
preperation_access <- subset(preperation_raw, !is.na(PtID) & !is.na(ExamDate))
preperation_access_since_030512 <- preperation_access %>%
    mutate(ExamDate = as.Date(ExamDate)) %>%
  filter(ExamDate >= as.Date("2005-03-12"))
```

## PET 판독/준비기록 PACS/OCS 이관

원자력병원 핵의학과에 PET이 설치된 당시에 판독은 Microsoft사의 Access database에 감마와 PET 판독을 입력하는 시스템을 사용했습니다. Access 상의 최초 PET ExamDate는 `1997-07-16`입니다. 50년사에는 PET 기동식이 `1997-08-02`로 기록되어 있으며 날짜를 비교해보면 기동식 이전에 판독입력은 약 2주전부터 이미 시작되었습니다.)

2000년 경에 EMR (Electric Medical Record)과 함께 OCS(Order Communication System)이 도입되었습니다. 이 때부터 오더가 있는 공식적인 판독은 OCS에 입력을 하게 됩니다. 하지만 당시에는 연구목적의 PET 등은 오더가 대부분 없었기 때문에 이런 경우들은 Access에 입력을 하게 됩니다. 따라서 OCS상의 최초 판독일은 `2000-07-04`이지만 Access 판독은 `2009-07-09`까지 존재합니다.

2003년 경에는 PACS가 도입됩니다. 이때부터 판독입력은 PACS에 직접 입력하게 되지만 결국은 OCS에도 저장되므로 판독기록의 보존이라는 측면에서는 차이가 없는셈입니다. 다만 Legacy PET Imaging Archive System 이외에 공식적인 PET(/CT) 저장이 새로 생겼다는 차이가 있습니다. 사실 Legacy PET Imaging Archive System은 magnetic tape, optical magnetic disk, CD 등으로 변모해왔지만 오랜시간이 경과하여 오류률이 높아서 실제 사용이 어렵기 때문에 PACS에 PET/CT image가 저장된다는 것은 상당한 장점이 있습니다.

마지막으로 NM miniPACS에도 영상기록이 보존되어 있습니다. 공식적으로 저장되기 시작한 날짜는 확인이 필요합니다. 영상보관면에서는 PET sinogram은 아니지만 reconstructed low data가 저장되어 있으므로 그러한 장점이 있습니다. 한가지 명확하지 않은 것은 reseach PET data의 경우 NM miniPACS에 저장하는 것도 고려됩니다.
